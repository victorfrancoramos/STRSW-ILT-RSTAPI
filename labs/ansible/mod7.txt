{ "aggregates": [{ "name": "aggr1_cluster1_01_data" } ], "name": "svm_san", "iscsi": {"enabled": "true" }}

{
  "aggregates": [
    {
      "name": "aggr1_cluster1_01_data"
    }
  ],
  "name": "svm_san",
  "iscsi": {
    "enabled": "true"
  }
}

curl -X POST "https://cluster1.demo.netapp.com/api/svm/svms?return_records=false&return_timeout=0" -H "accept: application/json" -H "authorization: Basic YWRtaW46TmV0YXBwMSE=" -H "Content-Type: application/json" -d "{ \"aggregates\": [{ \"name\": \"aggr1_cluster1_01_data\" } ], \"name\": \"svm_san\", \"iscsi\": {\"enabled\": \"true\" }}"

curl -X POST "https://cluster1.demo.netapp.com/api/svm/svms?return_records=false&return_timeout=0" -H "accept: application/json" -H "authorization: Basic YWRtaW46TmV0YXBwMSE=" -H "Content-Type: application/json" -d "{ \"aggregates\": [{ \"name\": \"aggr1_cluster1_01_data\" } ], \"name\": \"svm_san2\", \"iscsi\": {\"enabled\": \"true\" }}" -k

cd ansible-workshop
cat check_svm.curl
chmod 777 check_svm.curl
chmod 777 check_san.curl
yum install jq

TASK2
=====
ls -ltr /root/.ansible/collections/ansible_collections/netapp/ontap/roles/na_ontap_san_create/
more /root/.ansible/collections/ansible_collections/netapp/ontap/roles/na_ontap_san_create/tasks/main.yml
more /root/.ansible/collections/ansible_collections/netapp/ontap/roles/na_ontap_san_create/README.md

---
- name: Create iGroup
  na_ontap_igroup:
    state: present
    name: "{{ item.name }}"
    vserver: "{{ item.vserver }}"
    initiator_group_type: "{{ item.group_type }}"
    ostype: "{{ item.ostype }}"
    initiator: "{{ item.initiator }}"
    hostname: "{{ netapp_hostname }}"
    username: "{{ netapp_username }}"
    password: "{{ netapp_password }}"
    https: true
    validate_certs: "{{ validate_certs }}"
  with_items:
    "{{ igroups }}"
  when: igroups != None
- name: Create volume
  na_ontap_volume:
    state: present
    name: "{{ item.vol_name }}"
    aggregate_name: "{{ item.aggr }}"
    size: "{{ (item.size | int * 1.05) | round(0, 'ceil') | int }}"
    size_unit: gb
    space_guarantee: none
    vserver: "{{ item.vserver }}"
    hostname: "{{ netapp_hostname }}"
    username: "{{ netapp_username }}"
    password: "{{ netapp_password }}"
    https: true
    validate_certs: "{{ validate_certs }}"
  with_items:
    "{{ luns }}"
- name: Lun Create
  na_ontap_lun:
    state: present
    name: "{{ item.name }}"
    flexvol_name: "{{ item.vol_name }}"
    vserver: "{{ item.vserver }}"
    size: "{{ item.size }}"
    size_unit: gb
    ostype: "{{ item.ostype }}"
    space_reserve: "{{ item.space_reserve }}"
    hostname: "{{ netapp_hostname }}"
    username: "{{ netapp_username }}"
    password: "{{ netapp_password }}"
    https: true
    validate_certs: "{{ validate_certs }}"
  with_items:
    "{{ luns }}"
  when: luns != None
- name: Create LUN mapping
  na_ontap_lun_map:
    state: present
    initiator_group_name: "{{ item.igroup }}"
    path: "/vol/{{ item.vol_name }}/{{ item.name }}"
    vserver: "{{ item.vserver }}"
    hostname: "{{ netapp_hostname }}"
    username: "{{ netapp_username }}"
    password: "{{ netapp_password }}"
    https: true
    validate_certs: "{{ validate_certs }}"
  with_items:
    "{{ luns }}"
  when: luns != None
